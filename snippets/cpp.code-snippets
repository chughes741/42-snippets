{
	"C++ Class Prototype": {
		"prefix": "!class",
		"body": [
			"",
			"#ifndef ${TM_FILENAME/(.*)\\..+$/${1:/upcase}_HPP_/}",
			"#define ${TM_FILENAME/(.*)\\..+$/${1:/upcase}_HPP_/}",
			"",
			"// Class declaration",
			"class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} {",
			" public:",
			"  ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}($3);",
			"  ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}(const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} &${TM_FILENAME/(.*)\\..+$/${1:/downcase}/});",
			"  ~${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}();",
			"  ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} &operator=(const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} &other);",
			"",
			" private:",
			"  $2",
			"};",
			"",
			"#endif // ${TM_FILENAME/(.*)\\..+$/${1:/upcase}_HPP_/}",
			"",
		],
		"description": "OCF class declaration prototype",
	},
	"C++ Class Definition": {
		"prefix": "!classmethods",
		"body": [
			"",
			"#include \"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}.hpp\"",
			"",
			"// Default constructor",
			"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}::${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}($3) { return; }",
			"",
			"// Default destructor",
			"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}::~${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}() { return; }",
			"",
			"// Copy assignment",
			"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}::${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}(const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} &other) {",
			"  *this = other;",
			"  return;",
			"}",
			"",
		],
			"description": "OCF class method definitions"
	},
	"C header template": {
		"prefix": "!cheader",
		"body": [
			"",
			"#ifndef ${TM_FILENAME/(.*)\\..+$/${1:/upcase}_H/}",
			"# define ${TM_FILENAME/(.*)\\..+$/${1:/upcase}_H/}",
			"",
			"$1//# include <stdio.h>",
			"$2//# include <unistd.h>",
			"",
			"",
			"$0",
			"",
			"",
			"#endif // ${TM_FILENAME/(.*)\\..+$/${1:/upcase}_H/}",
			"",
		],
		"description": "C headerfile template"
	}
}